---
import BaseLayout from "../layouts/BaseLayout.astro";
import HorizontalCard from "../components/HorizontalCard.astro";
import { getCollection } from "astro:content";
import createSlug from "../lib/createSlug";

const posts = (await getCollection("blog")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

const last_posts = posts.slice(0, 3);
---

<BaseLayout sideBarActiveItemID="home">
  <div class="pb-12 mt-5">
    <div class="text-xl py-1">Hai ðŸ‘‹</div>
    <div class="text-5xl font-bold">Saya Reza putra fadilah</div>
    <div class="text-3xl py-3 font-bold">
      <span id="typingText" class="typing-animation"></span>
    </div>
    <div class="py-2">
      <text class="text-lg">
        Saya seorang <b>Junior programmer</b> dengan pengalaman dalam berbagai bahasa
        pemrograman seperti JavaScript dan PHP. Saya telah mencoba berbagai framework
        seperti <b>
          React JS, Vue JS, Nuxt JS, Astro JS, Boostrap CodeIgniter, dan
          Laravel.
        </b>
        Saya juga memiliki minat dalam jaringan seperti
        <b> CCNA </b>, karena Saya percaya bahwa pemahaman jaringan adalah nilai
        tambah penting. Di samping itu, Anda senang menciptakan konten kreatif
        di Instagram dan Youtube saya menggunakan Software seperti<b>
          Canva, CapCut, dan Kinemaster</b
        >, dan Anda yakin keterampilan ini dapat memberikan nilai tambah di
        dunia yang terus berkembang ini.
      </text>
    </div>
    <div class="mt-8">
      <a
        class="btn"
        href="https://www.linkedin.com/in/reza-putra-fadilah-87800316b/"
        target="_blank">Let's connect!</a
      >
    </div>
  </div>

  <div>
    <div class="text-3xl w-full font-bold mb-2">My projects</div>
  </div>

  <HorizontalCard
    title="Hospital"
    img="/Hospital.png"
    desc="Website rumah sakit sederhana yang dibuat untuk menyediakan informasi yang ada di dalam rumah sakit tersebut"
    url="https://hospital-zaputlah.vercel.app/"
    customTag="#Reactjs #Fontawesome #Jwt #Reactstrap #Css #Axios"
    badge="NEW"
  />
  <div class="divider my-0"></div>
  <HorizontalCard
    title="CRUD 1"
    img="/crud1.png"
    desc="Crud sederhana yang bisa melakukan create read ubah delete tapi sebelum melakukan crud di wajibkan untuk login terlebih dahulu"
    customTag="#Reactjs #Redux #Jwt #Bootsrap #Axios"
    url="https://crud-react-redux-tau.vercel.app/"
  />
  <div class="divider my-0"></div>
  <HorizontalCard
    title="Qoute 1"
    img="/qoute1.png"
    desc="Kumpulan kata kata Bijak dari Orang orang yang ada di luar negeri"
    customTag="#Reactjs #Api #Axios #Css"
    url="https://qoute-chi.vercel.app/"
  />
  <div class="divider my-0"></div>
  <div class="container relative">
    <a
      class="inline-block px-4 py-2 mt-2 bg-black text-white rounded hover:bg-gray-400 absolute top-0 right-0"
      href="/projects">Selengkapnya</a
    >
  </div>

  <div>
    <div class="text-3xl w-full font-bold mb-5 mt-10">My Blog</div>
  </div>

  {
    last_posts.map((post) => (
      <>
        <HorizontalCard
          title={post.data.title}
          img={post.data.heroImage}
          desc={post.data.description}
          url={"/blog/" + createSlug(post.data.title, post.slug)}
          target="_self"
          badge={post.data.badge}
        />
        <div class="divider my-0" />
      </>
    ))
  }
  <div class="container relative">
    <a
      class="inline-block px-4 py-2 mt-2 bg-black text-white rounded hover:bg-gray-400 absolute top-0 right-0"
      href="/blog">Selengkapnya</a
    >
  </div>
</BaseLayout>

<script>
  // Daftar kata-kata yang akan ditampilkan
  const words = ["Junior Programmer", "Video Editor", "Designer"];
  let wordIndex = 0; // Indeks kata saat ini
  let charIndex = 0; // Indeks karakter saat ini
  let isDeleting = false; // Menandakan apakah sedang menghapus karakter
  let typingSpeed = 100; // Kecepatan ketik (ms)
  let delayBeforeNextWord = 1500; // Waktu jeda sebelum menampilkan kata berikutnya (ms)

  // Fungsi untuk menampilkan kata saat ini dengan efek animasi ketik
  function type() {
    const currentWord = words[wordIndex]; // Ambil kata saat ini dari array
    if (isDeleting) {
      // Hapus karakter
      charIndex--;
    } else {
      // Tambahkan karakter
      charIndex++;
    }

    // Tampilkan kata saat ini sesuai dengan indeks karakter
    document.getElementById("typingText").textContent = currentWord.substring(
      0,
      charIndex,
    );

    // Menentukan kecepatan animasi
    let delta = typingSpeed;
    if (isDeleting) {
      // Kecepatan menghapus setengah dari kecepatan mengetik
      delta /= 2;
    }

    // Cek apakah sudah mencapai akhir kata
    if (!isDeleting && charIndex === currentWord.length) {
      // Waktu jeda sebelum menampilkan kata berikutnya
      delta = delayBeforeNextWord;
      isDeleting = true; // Ganti status ke menghapus karakter
    } else if (isDeleting && charIndex === 0) {
      // Cek apakah sudah selesai menghapus karakter
      isDeleting = false; // Ganti status ke menambah karakter
      wordIndex = (wordIndex + 1) % words.length; // Pindah ke kata berikutnya
      delta = 500; // Waktu jeda sebelum mulai mengetik kata selanjutnya
    }

    // Lanjutkan animasi
    setTimeout(type, delta);
  }

  // Jalankan fungsi type untuk memulai animasi
  document.addEventListener("DOMContentLoaded", type);
</script>
